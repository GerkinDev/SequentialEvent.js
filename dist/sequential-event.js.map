{"version":3,"sources":["sequential-event.js"],"names":["f","exports","module","define","amd","g","window","global","self","SequentialEvent","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","emitHandlers","handlers","object","args","emitHandler","promiseGen","getNextPromise","sourcePromise","Promise","handlersLength","resolve","reject","_getNextPromise","prevResolve","stepArgs","concat","slice","newPromise","then","catch","handler","retVal","apply","onceify","target","eventName","eventFn","called","fn","off","removeEventListener","eventCat","callback","index","indexOf","splice","addEventListener","eventHash","push","castToEventObject","events","eventsObj","split","forEach","event","__events","type","retPromise","_events","hasOwnProperty"],"mappings":"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","file":"sequential-event.js","sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.SequentialEvent = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\n/**\n * @file File defining the SequentialEvent class\n * @licence GPLv3\n * @author Gerkin\n */\n\n/**\n * Handle execution of all handlers in sequence.\n *\n * @param   {Function|Function[]} handlers - Function(s) to execute. Each function may return a Promise.\n * @param   {SequentialEvent}     object   - Objecto call event on.\n * @param   {Any[]}               [args]   - Arguments to pass to each called function.\n * @returns {Promise} Promise resolved once each function is executed.\n * @memberof SequentialEvent\n * @author Gerkin\n * @inner\n */\nconst emitHandlers = ( handlers, object, args ) => {\n\t// Check if the provided handler is a single function or an array of functions\n\tif ( 'function' === typeof handlers ) {\n\t\treturn emitHandler( handlers, object, args );\n\t} else {\n\t\tconst promiseGen = getNextPromise( handlers, object, args );\n\t\tconst sourcePromise = new Promise( promiseGen );\n\t\treturn sourcePromise;\n\t}\n};\n\n/**\n * Generate next promise for sequence.\n *\n * @param   {Function|Function[]} handlers - Function(s) to execute. Each function may return a Promise.\n * @param   {SequentialEvent}     object   - Objecto call event on.\n * @param   {Any[]}               [args]   - Arguments to pass to each called function.\n * @returns {Function} Promise handler.\n * @memberof SequentialEvent\n * @author Gerkin\n * @inner\n */\n\nconst getNextPromise = ( handlers, object, args ) => { //(resolve, reject) => {\n\tlet i = 0;\n\tconst handlersLength = handlers.length;\n\treturn ( resolve, reject ) => {\n\t\tconst _getNextPromise = ( prevResolve ) => {\n\t\t\tif ( i < handlersLength ) {\n\t\t\t\tconst stepArgs = 'undefined' !== typeof prevResolve ? args.concat([ prevResolve ]) : args.slice( 0 );\n\t\t\t\tconst newPromise = emitHandler( handlers[i], object, stepArgs );\n\t\t\t\tnewPromise.then( _getNextPromise ).catch( reject );\n\t\t\t\ti++;\n\t\t\t} else {\n\t\t\t\treturn resolve.call( null, prevResolve );\n\t\t\t}\n\t\t};\n\t\treturn _getNextPromise();\n\t};\n};\n\n/**\n * Handle execution of a single handler.\n *\n * @param   {Function}        handler - Function to execute. It may return a Promise.\n * @param   {SequentialEvent} object  - Object to call event on.\n * @param   {Any[]}           [args]  - Arguments to pass to each called function.\n * @returns {Promise} Promise resolved once this function is done.\n * @memberof SequentialEvent\n * @author Gerkin\n * @inner\n */\nconst emitHandler = ( handler, object, args ) => {\n\ttry {\n\t\tconst retVal = handler.apply( object, args );\n\t\tif ( 'object' === typeof retVal && 'function' === typeof retVal.then ) {\n\t\t\treturn retVal;\n\t\t} else {\n\t\t\treturn Promise.resolve( retVal );\n\t\t}\n\t} catch ( e ) {\n\t\treturn Promise.reject( e );\n\t}\n};\n\n/**\n * Generate an event handler that deregister itself when executed. This handler will be executed just once.\n *\n * @param   {Object}   target    - Event emitter that will use the handler.\n * @param   {string}   eventName - Name of the event to trigger.\n * @param   {Function} eventFn   - Handler for the event.\n * @returns {Function} Function that will be executed only once.\n * @memberof SequentialEvent\n * @author Gerkin\n * @inner\n */\nconst onceify = ( target, eventName, eventFn ) => {\n\tlet called = false;\n\tconst fn = ( ...args ) => {\n\t\tif ( !called ) {\n\t\t\ttarget.off( eventName, fn );\n\t\t\tcalled = true;\n\t\t\treturn eventFn( ...args );\n\t\t}\n\t};\n\treturn fn;\n};\n\n/**\n * Remove provided `callback` from listeners of event `eventCat`.\n *\n * @param   {Function[]} eventCat   - Array of listeners to remove callback from.\n * @param   {Function}   [callback] - Callback to remove.\n * @returns {undefined} This function does not returns anything.\n * @memberof SequentialEvent\n * @author Gerkin\n * @inner\n */\nconst removeEventListener = ( eventCat, callback ) => {\n\tconst index = eventCat.indexOf( callback );\n\tif ( index !== -1 ) {\n\t\teventCat.splice( index, 1 );\n\t}\n};\n\n\n/**\n * Add an event listener to the provided event hash.\n *\n * @param   {Object}   eventHash  - Hash of events of the object. It is usually retrieved from `object.__events`.\n * @param   {string}   eventName  - Name of the event to add listener on.\n * @param   {Function} [callback] - Callback to add.\n * @returns {undefined} This function does not returns anything.\n * @memberof SequentialEvent\n * @author Gerkin\n * @inner\n */\nconst addEventListener = ( eventHash, eventName, callback ) => {\n\teventHash[eventName] = eventHash[eventName] || [];\n\teventHash[eventName].push( callback );\n};\n\n/**\n * Ensure that event & callback are on the associative hash format.\n *\n * @param   {Object<string, Function>|string} events   - Events to cast in hash form.\n * @param   {Function}                        callback - Function to associate with those events.\n * @returns {Object<string, Function>} Events in hash format.\n * @memberof SequentialEvent\n * @author Gerkin\n * @inner\n */\nconst castToEventObject = ( events, callback ) => {\n\tif ( 'object' !== typeof events ) {\n\t\tconst eventsObj = {};\n\t\tevents.split( ' ' ).forEach( event => {\n\t\t\teventsObj[event] = callback;\n\t\t});\n\t\treturn eventsObj;\n\t} else {\n\t\treturn events;\n\t}\n};\n\n/**\n * Event emitter that guarantees sequential execution of handlers. Each handler may return a **Promise**.\n *\n * @see {@link https://nodejs.org/api/events.html Node EventEmitter}.\n */\nclass SequentialEvent {\n\t/**\n\t * Constructs a new SequentialEvent.\n\t *\n\t * @author Gerkin\n\t */\n\tconstructor() {\n\t\tthis.__events = {};\n\t}\n\n\t/**\n\t * Triggers each corresponding handlers in sequence.\n\t *\n\t * @param   {Any}   type   - Name of the event to sequential-event.\n\t * @param   {Any[]} [args] - Parameters to pass to handlers.\n\t * @returns {Promise} Returns a Promise resolved when then chain is done.\n\t * @author Gerkin\n\t */\n\temit( type, ...args ) {\n\t\tconst events = this.__events;\n\t\tif ( !events ) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tconst handler = events[type];\n\t\tif ( !handler ) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tconst retPromise = emitHandlers( handler, this, args );\n\n\t\treturn retPromise;\n\t}\n\n\t/**\n\t * Remove one or many or all event handlers.\n\t *\n\t * @param   {string|Object} [events]   - Event name or hash of events.\n\t * @param   {Function}      [callback] - If provided an event name with `events`, function to associate with the event.\n\t * @returns {SequentialEvent} Returns `this`.\n\t */\n\toff( events, callback ) {\n\t\tconst _events = this.__events;\n\n\t\tif ( !events ) {\n\t\t\tthis.__events = {};\n\t\t\treturn this;\n\t\t}\n\n\t\tconst eventsObj = castToEventObject( events, callback );\n\t\tfor ( const event in eventsObj ) {\n\t\t\tif ( !eventsObj.hasOwnProperty( event )) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif ( eventsObj[event]) {\n\t\t\t\tremoveEventListener( _events[event], eventsObj[event]);\n\t\t\t} else {\n\t\t\t\t_events[event] = [];\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Add one or many event handlers that will be called only once.\n\t *\n\t * @param   {string|Object} events     - Event name or hash of events.\n\t * @param   {Function}      [callback] - If provided an event name with `events`, function to associate with the event.\n\t * @returns {SequentialEvent} Returns `this`.\n\t */\n\tonce( events, callback ) {\n\t\tconst _events = this.__events;\n\n\t\tconst eventsObj = castToEventObject( events, callback );\n\t\tfor ( const event in eventsObj ) {\n\t\t\tif ( eventsObj.hasOwnProperty( event )) {\n\t\t\t\taddEventListener( _events, event, onceify( this, event, eventsObj[event]));\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Add one or many event handlers.\n\t *\n\t * @param   {string|Object} events     - Event name or hash of events.\n\t * @param   {Function}      [callback] - If provided an event name with `events`, function to associate with the event.\n\t * @returns {SequentialEvent} Returns `this`.\n\t */\n\ton( events, callback ) {\n\t\tconst _events = this.__events;\n\n\t\tconst eventsObj = castToEventObject( events, callback );\n\t\tfor ( const event in eventsObj ) {\n\t\t\tif ( eventsObj.hasOwnProperty( event )) {\n\t\t\t\taddEventListener( _events, event, eventsObj[event]);\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t}\n}\n\nmodule.exports = SequentialEvent;\n\n},{}]},{},[1])(1)\n});"]}